# name: Java Test with TestLoginRunner

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}

#       - name: Set up JDK 11
#         uses: actions/setup-java@v4
#         with:
#           java-version: '11'
#           distribution: 'adopt'

#       - name: Navigate to project directory
#         run: cd UI_Automation_Project  # Adjust if your project directory is different

#       - name: Build and Test with Maven
#         run: |
#           mvn -f UI_Automation_Project/pom.xml clean test-compile -Dmaven.compiler.source=11 -Dmaven.compiler.target=11
#           mvn -f UI_Automation_Project/pom.xml test -Dtest=com.api.uiAutomation.UI_Automation_Project.login.TestLoginRunner -DfailIfNoTests=false
          
#       - name: Generate Karate HTML Reports
#         run: mvn -f UI_Automation_Project/pom.xml site -DskipTests=true -Dmaven.site.skip=true
#         continue-on-error: true

#       - name: Archive Karate HTML Reports
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: karate-reports
#           path: UI_Automation_Project/target/surefire-reports

# name: Java Test with TestLoginRunner

# on:
#   push:
#   pull_request:

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     services:
#       selenium:
#         image: selenium/standalone-chrome
#         options: --shm-size=2g
#         ports:
#           - 4444:4444

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Build Docker image
#         run: docker build -t karate-tests .

#       - name: Run tests in Docker container
#         run: |
#           docker run --rm --network host \
#             -v $(pwd):/karate-tests \
#             -w /karate-tests \
#             -e BASE_URL=https://www.saucedemo.com/ \
#             karate-tests \
#             java -jar karate-tests/karate.jar UI_Automation_Project/src/test/java/UI_Automation_Project/login/TestLoginRunner.java

#       - name: List files in UI_Automation_Project/target/surefire-reports
#         run: ls -R UI_Automation_Project/target/surefire-reports

#       - name: Upload Test Reports
#         uses: actions/upload-artifact@v4
#         with:
#           name: Karate Reports
#           overwrite: true
#           path: UI_Automation_Project/target/surefire-reports  # Path to the directory where Karate reports are generated

name: Karate Tests

on:
  push:
    branches:
      - main  # Adjust branch name as per your default branch

jobs:
  test:
    runs-on: ubuntu-latest  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Checks out your repository

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('UI_Automation_Project/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Find available port and start Chrome
        id: chrome
        run: |
          PORT=$(shuf -i 8000-9999 -n 1)
          echo "PORT=$PORT" >> $GITHUB_ENV
          google-chrome --remote-debugging-port=$PORT --headless --disable-gpu --no-sandbox &
        shell: bash

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'  # Specify the distribution

      - name: Install dependencies
        run: mvn clean install -DskipTests
        working-directory: UI_Automation_Project  # Set the working directory to swaglab

      - name: Run Login Scenarios
        working-directory: UI_Automation_Project  # Set the working directory to swaglab
        run: |
          mvn clean test -Dtest=UI_Automation_Project.src.test.java.UI_Automation_Project.login.TestLoginRunner.java -Dmaven.test.failure.ignore=false

      #- name: Archive test results
       # if: always()
        #uses: actions/upload-artifact@v2
        #with:
         # name: test-results
          #path: swaglab/target/surefire-reports
      
      - name: Upload Surefire Test Report
        if: always()  # Always run this step
        uses: actions/upload-artifact@v2
        with:
          name: surefire-test-report
          path: UI_Automation_Project/target/surefire-reports

      - name: Generate Karate Test Report
        if: always()  # Always run this step
        run: |
          mkdir -p karate-reports
          cp -r UI_Automation_Project/target/karate-reports/* karate-reports/
        
      - name: Upload Karate Test Report
        if: always()  # Always run this step
        uses: actions/upload-artifact@v2
        with:
          name: karate-test-report
          path: karate-reports

# name: UI Automation Tests

# on:
#   push:
#     branches:
#       - main  # adjust the branch name as needed

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
      
#     - name: Set up JDK 11
#       uses: actions/setup-java@v2
#       with:
#         java-version: '11'
#         distribution: 'adopt'
      
#     - name: Build and test with Maven
#       run: |
#         cd UI_Automation_Project  # Adjust the directory to where your pom.xml is located
#         mvn clean test

#     - name: Generate Karate HTML Report
#       run: |
#         cd UI_Automation_Project  # Adjust the directory to where your pom.xml is located
#         mvn verify
#       continue-on-error: true

#     - name: Upload HTML Report
#       uses: actions/upload-artifact@v2
#       with:
#         name: karate-html-report
#         path: UI_Automation_Project/target/surefire-reports


